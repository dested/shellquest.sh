// Stub for uiohook-napi in browser - global keyboard/mouse hooks not available in browser

export const uIOhook = {
  on: (event: string, callback: Function) => {},
  off: (event: string, callback: Function) => {},
  start: () => {},
  stop: () => {},
  keyTap: (key: string, modifiers?: string[]) => {},
  keyToggle: (key: string, type: string, modifiers?: string[]) => {},
}

export const UiohookKey = {
  Escape: 'Escape',
  F1: 'F1',
  F2: 'F2',
  F3: 'F3',
  F4: 'F4',
  F5: 'F5',
  F6: 'F6',
  F7: 'F7',
  F8: 'F8',
  F9: 'F9',
  F10: 'F10',
  F11: 'F11',
  F12: 'F12',
  PrintScreen: 'PrintScreen',
  ScrollLock: 'ScrollLock',
  Pause: 'Pause',
  Backquote: 'Backquote',
  1: '1',
  2: '2',
  3: '3',
  4: '4',
  5: '5',
  6: '6',
  7: '7',
  8: '8',
  9: '9',
  0: '0',
  Minus: 'Minus',
  Equal: 'Equal',
  Backspace: 'Backspace',
  Tab: 'Tab',
  Q: 'Q',
  W: 'W',
  E: 'E',
  R: 'R',
  T: 'T',
  Y: 'Y',
  U: 'U',
  I: 'I',
  O: 'O',
  P: 'P',
  BracketLeft: 'BracketLeft',
  BracketRight: 'BracketRight',
  Enter: 'Enter',
  CapsLock: 'CapsLock',
  A: 'A',
  S: 'S',
  D: 'D',
  F: 'F',
  G: 'G',
  H: 'H',
  J: 'J',
  K: 'K',
  L: 'L',
  Semicolon: 'Semicolon',
  Quote: 'Quote',
  Backslash: 'Backslash',
  ShiftLeft: 'ShiftLeft',
  IntlBackslash: 'IntlBackslash',
  Z: 'Z',
  X: 'X',
  C: 'C',
  V: 'V',
  B: 'B',
  N: 'N',
  M: 'M',
  Comma: 'Comma',
  Period: 'Period',
  Slash: 'Slash',
  ShiftRight: 'ShiftRight',
  CtrlLeft: 'CtrlLeft',
  AltLeft: 'AltLeft',
  Space: 'Space',
  AltRight: 'AltRight',
  CtrlRight: 'CtrlRight',
  ArrowLeft: 'ArrowLeft',
  ArrowUp: 'ArrowUp',
  ArrowDown: 'ArrowDown',
  ArrowRight: 'ArrowRight',
  Numpad0: 'Numpad0',
  Numpad1: 'Numpad1',
  Numpad2: 'Numpad2',
  Numpad3: 'Numpad3',
  Numpad4: 'Numpad4',
  Numpad5: 'Numpad5',
  Numpad6: 'Numpad6',
  Numpad7: 'Numpad7',
  Numpad8: 'Numpad8',
  Numpad9: 'Numpad9',
  NumpadMultiply: 'NumpadMultiply',
  NumpadAdd: 'NumpadAdd',
  NumpadSubtract: 'NumpadSubtract',
  NumpadDecimal: 'NumpadDecimal',
  NumpadDivide: 'NumpadDivide',
  NumpadEnter: 'NumpadEnter',
  NumLock: 'NumLock',
}

export default {
  uIOhook,
  UiohookKey,
}